# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- job: precommit
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      Python38:
        python.version: '3.8'

  variables:
    PRE_COMMIT_HOME: $(Pipeline.Workspace)/pre-commit-cache

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      echo "##vso[task.setvariable variable=PY]$(python -VV)"
    displayName: set version variables
  - task: CacheBeta@0
    inputs:
      key: pre-commit | .pre-commit-config.yaml | "$(PY)"
      path: $(PRE_COMMIT_HOME)

  - script: |
      python -m pip install --upgrade pip
      pip install poetry
      poetry install
    displayName: 'Install dependencies'
    
  - script: poetry run pre-commit run --all-files --show-diff-on-failure
    displayName: run pre-commit
